<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="53851" started-at="2019-12-03T17:26:50 IST" finished-at="2019-12-03T17:27:44 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="53851" started-at="2019-12-03T17:26:50 IST" finished-at="2019-12-03T17:27:44 IST">
      <class name="com.training.simple.tests.RegisterUserTest">
        <test-method status="PASS" signature="setUpBeforeClass()[pri:0, instance:com.training.simple.tests.RegisterUserTest@22a67b4]" name="setUpBeforeClass" is-config="true" duration-ms="35" started-at="2019-12-03T17:26:50 IST" finished-at="2019-12-03T17:26:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeClass -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.training.simple.tests.RegisterUserTest@22a67b4]" name="setUp" is-config="true" duration-ms="25103" started-at="2019-12-03T17:26:50 IST" finished-at="2019-12-03T17:27:15 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="RegisterUserTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.training.simple.tests.RegisterUserTest@22a67b4]" name="RegisterUserTest" duration-ms="26808" started-at="2019-12-03T17:27:15 IST" data-provider="xls-inputs" finished-at="2019-12-03T17:27:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kuhu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Singh]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[kuhuReshu12@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[987654321]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Kadugodi]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Kannamangala]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Bangalore]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[560067]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Karnataka]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[reshu198]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[reshu198]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy11.getText(Unknown Source)
at com.training.pom.ConfirmLoginPOM.validateConfirmationMsg(ConfirmLoginPOM.java:41)
at com.training.simple.tests.RegisterUserTest.RegisterUserTest(RegisterUserTest.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RegisterUserTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.training.simple.tests.RegisterUserTest@22a67b4]" name="tearDown" is-config="true" duration-ms="1560" started-at="2019-12-03T17:27:42 IST" finished-at="2019-12-03T17:27:44 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.training.simple.tests.RegisterUserTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
